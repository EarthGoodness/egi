name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Read Properties
        id: read_property
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: custom_components/egi/manifest.json
          property: version

      - name: Get Latest Release
        id: get_latest_release
        uses: joutvhu/get-release@v1
        with:
          latest: true
          prerelease: false  # Set to true if you want to include pre-releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Check version
        run: |
          echo Uploaded version: ${{ steps.read_property.outputs.value }}
          echo Latest version: ${{ steps.get_latest_release.outputs.name }}

      - name: Skip release
        if: ${{ steps.read_property.outputs.value == steps.get_latest_release.outputs.name }}
        run: |
          echo Skipping release because version did not change!

      - name: Create Git Tag
        if: ${{ steps.read_property.outputs.value != steps.get_latest_release.outputs.name }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ steps.read_property.outputs.value }}
          git push origin ${{ steps.read_property.outputs.value }}
        
      - name: Create zip asset
        if: ${{ steps.read_property.outputs.value != steps.get_latest_release.outputs.name }}
        uses: TheDoctor0/zip-release@0.4.2
        with:
          filename: egi-${{ steps.read_property.outputs.value }}.zip
          directory: custom_components/egi
          type: zip
        
      - name: Verify zip file exists
        if: ${{ steps.read_property.outputs.value != steps.get_latest_release.outputs.name }}
        run: |
          if [ ! -f "custom_components/egi-${{ steps.read_property.outputs.value }}.zip" ]; then
              echo "Error: Zip file not found!"
              exit 1
          fi

      - name: Create Release
        if: ${{ steps.read_property.outputs.value != steps.get_latest_release.outputs.name }}
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.read_property.outputs.value }}
          release_name: ${{ steps.read_property.outputs.value }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        